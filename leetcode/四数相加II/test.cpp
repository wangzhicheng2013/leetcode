#include <iostream>
#include <vector>
#include <set>
#include <cmath>
#include <unordered_map>
using namespace std;
class Solution {
private:
    int max_size_ = 1024;
public:
    int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4) {
        int n = nums1.size();
        short pos[4] = { 0 };
        int count = 0;
        int len = pow(n, 4);
        for (int i = 0;i < len;i++) {
            if (0 == nums1[pos[0]] + nums2[pos[1]] + nums3[pos[2]] + nums4[pos[3]]) {
                ++count;
            }
            ++pos[3];
            if (n == pos[3]) {
                pos[3] = 0;
                ++pos[2];
                if (n == pos[2]) {
                    pos[2] = 0;
                    ++pos[1];
                    if (n == pos[1]) {
                        pos[1] = 0;
                        ++pos[0];
                    }
                }
            }
        }
        return count;
    }
    int fourSumCount1(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4) {
        std::unordered_map<int, int>sum_cnt_map;
        int cnt = 0;
        int val = 0;
        for (auto u : nums1) {
            for (auto v : nums2) {
                ++sum_cnt_map[u + v];
            }
        }
        for (auto u : nums3) {
            for (auto v : nums4) {
                val = -u - v;
                auto it = sum_cnt_map.find(val);
                if (it != sum_cnt_map.end()) {
                    cnt += it->second;
                }
            }
        }
        return cnt;
    }
};
int main() {
    std::vector<int>nums1{-16,-30,-6,8,-26,-23,-14,-29,-23,10,7,9,5,-13,-2,-18,5,5,-31,-26,7,-32,-18,-30,-23,-30,9,-1,-13,-27,-9,-14,1,-18,-6,5,2,-15,-19,5,-17,6,-26,-11,-29,-15,-9,-12,-11,-18,-17,1,1,-1,-10,9,-3,7,0,-1,-10,10,-3,-26,-11,-27,-2,-26,-27,-8,-26,-23,-10,3,0,-11,-5,-4,-10,-31,8,-11,-22,-14,-9,-22,-20,-20,-5,-1,10,-29,-32,7,-26,-2,8,4,-15,-24}, 
                    nums2{8,-15,-26,10,-21,-20,6,-20,-22,-6,8,-8,-27,-9,-1,-27,-2,-24,1,9,-1,-4,9,7,-21,-11,0,-7,3,4,-13,-19,-13,-32,-12,-30,-17,-5,-31,-21,-14,-23,-31,-6,-26,-4,-21,-12,1,-3,-3,5,4,-13,-2,-20,-16,-6,3,-16,-1,-18,-31,-2,4,-2,-32,-5,-7,5,-5,-22,-20,-26,8,-24,-8,-23,4,7,-10,-31,-22,-7,-26,6,-17,5,-28,5,6,-11,-29,-1,-1,-12,-32,-16,-8,-10}, 
                    nums3{10,-25,-2,-1,-10,-18,-20,-17,10,-31,6,-12,5,-2,-19,-2,-25,-26,-21,-29,8,-28,-8,-18,-32,-24,-17,2,-25,-32,-7,3,-28,-31,-21,-9,2,-2,-18,-25,-14,-15,-11,5,-29,-23,-4,-4,10,0,-9,-24,6,-23,5,-7,-16,5,-17,6,-18,-8,5,-6,-29,-15,9,10,-12,8,5,3,5,9,-6,-25,-28,-21,8,-17,-31,-12,-2,2,-12,2,-28,9,-28,-13,-17,-27,10,-26,6,-25,-25,-19,10,-8}, 
                    nums4{-6,-29,-15,-6,-16,-18,1,-27,-15,-8,4,-14,-11,-28,5,-13,-18,-30,-19,-17,-17,3,6,-7,-5,-23,-20,-32,0,-17,-24,-10,-11,-23,-12,-31,-29,-31,3,-18,-16,-13,10,-18,-28,-27,-1,-23,2,10,0,-5,-8,4,-18,-16,-3,-4,-22,-15,2,0,-30,1,-1,-14,-9,-24,-24,-17,10,0,-29,-9,-19,-12,-22,1,-14,-22,2,-31,-22,-30,-29,-16,-15,-15,-14,-25,-28,7,-29,-5,-30,7,9,5,0,-6};
    Solution ss;
    std::cout << ss.fourSumCount(nums1, nums2, nums3, nums4) << std::endl;

    return 0;
}
